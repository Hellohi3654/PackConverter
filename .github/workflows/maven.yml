# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/labeler@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Generate settings.xml for Maven Deploy
      # You may pin to the exact commit or the version.
      # uses: whelk-io/maven-settings-xml-action@f2ce02adb757b1118ab14604d2e8bdaafdb9bf92
      uses: whelk-io/maven-settings-xml-action@v14
      with:
        repositories: '[{ "id": "github", "name": "GitHub hellohi3654 Apache Maven Packages", "url": "https://maven.pkg.github.com/hellohi3654/PackConverter", "releases": { "enabled": "true" }, "snapshots": { "enabled": "true" } }]'
        servers: '[{ "id": "github", "username": "hellohi3654", "password": "${{ secrets.PKEY }}" }]'
        profiles: '[{ "id": "github" }]'
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven Deploy
      run: mvn clean install -T 2C
    - name: Archive artifacts 
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: PACK
        path: target/
